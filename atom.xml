<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jughead YQQ</title>
  
  
  <link href="https://jason177.com/atom.xml" rel="self"/>
  
  <link href="https://jason177.com/"/>
  <updated>2021-09-29T06:32:00.000Z</updated>
  <id>https://jason177.com/</id>
  
  <author>
    <name>Jughead YQQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTFHub-http基础认证</title>
    <link href="https://jason177.com/2021/09/29/ctfhub-http-basic/"/>
    <id>https://jason177.com/2021/09/29/ctfhub-http-basic/</id>
    <published>2021-09-29T05:28:22.000Z</published>
    <updated>2021-09-29T06:32:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CTFHub-基础认证"><a href="#CTFHub-基础认证" class="headerlink" title="CTFHub-基础认证"></a>CTFHub-基础认证</h1><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>题目位置：CTFHub-&gt;技能树-&gt;Web-&gt;Web前置技能-&gt;HTTP协议-&gt;基础认证</p></div><div class="note success disabled"><p><a href="https://www.ctfhub.com/">CTFHub官网</a></p></div><p>我靠…这么简单的题也好意思写博客…嘻嘻嘻，我就爱！</p><hr><h2 id="开始解题"><a href="#开始解题" class="headerlink" title="开始解题"></a>开始解题</h2><p>看题目</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291349515.png" alt="image-20210929114332527"></p><p>首先给了一个地址和一个题目附件，我们先去地址看一下</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291144825.png" alt="image-20210929114434729"></p><p>有个click链接，点进去会有提示要求你输入用户名和密码。</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291144968.png" alt="image-20210929114453896"></p><p>然后我们再打开题目给的附件，可以看到文件名<mark class="hl-label red">可能</mark> 意思就是：一千万个密码中最热门的100个密码</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291143423.png" alt="image-20210929114355318"></p><p>那好吧，密码字典已经给出来了，大概意思就是密码爆破咯。我们可以先尝试随便输入用户名和密码，然后利用<strong>Burp Suite</strong>进行抓包</p><div class="note info no-icon flat"><p>用户名：111</p><p>密码：123</p></div><h2 id="Burp-Suite"><a href="#Burp-Suite" class="headerlink" title="Burp Suite"></a>Burp Suite</h2><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291145254.png" alt="image-20210929114540150"></p><p>可以看到中间有一个Authorization:Basic 阿巴阿巴</p><p>“Basic”就是”基础”的意思，对应题目的”基础认证”</p><p>咦？阿巴阿巴后面居然有两个等号</p><p>Base64解码一下咯！</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291146786.png" alt="image-20210929114621674"></p><p>右键-&gt;转换选择-&gt;Base64-&gt;Base64解码</p><p>英文版的Burp Suite自己琢磨(我tm四级没过)</p><p>解出来如下</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291146081.png" alt="image-20210929114650979"></p><p>发现是自己输入的用户名和密码，中间冒号隔开，发送请求的时候Base64编码了</p><p>先不管，把请求包右键发送到重发器(REpeater)然后发送</p><h3 id="Repeater"><a href="#Repeater" class="headerlink" title="Repeater"></a>Repeater</h3><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291149872.png" alt="image-20210929114938674"></p><p>有提示！可以看到服务器的响应头里面有：”Do u know admin？”</p><p>所以用户名应该是admin</p><p>到这里可以用脚本对用户名和密码文件里的密码整合起来进行base64编码后爆破了</p><p>但是这里我比较菜，不会写脚本，所以用了个还算平民的方法(简单简单简单！)</p><h2 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h2><p>用Notepad++打开密码txt文件</p><p>Ctrl+H打开搜索替换</p><p>利用正则表达式，统一把”admin:”加在100个密码的前面</p><p>^表示行首，意思就是在每行行首凭空添加”admin:”，记得在下面把Search Mode中的Regular expression(正则表达式)选中</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291158620.png" alt="image-20210929115801503"></p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291156520.png" alt="image-20210929115659396"></p><h2 id="Burp-Suite-Intruder"><a href="#Burp-Suite-Intruder" class="headerlink" title="Burp Suite(Intruder)"></a>Burp Suite(Intruder)</h2><p>替换好之后回到Burp Suite，右键把数据包发送到测试器(Intruder),然后点击Positions，选中已经被Base64编码的那一串字符，做一个payload</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291159870.png" alt="image-20210929115903743"></p><p>点击Positions右边的Payloads</p><p>添加我们的”用户名:密码”到有效载荷选项中</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291204348.png" alt="image-20210929120446192"></p><p>然后发现了一个不重要的信息</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291205540.png" alt="image-20210929120512461"></p><p>为什么密码有101个！不是100个嘛！</p><p>经过我名侦探般的推理，后来发现是本来的密码文件的最后面多了个换行，导致添加”admin:”到密码文件的时候识别到最后一行的行首，所以在后面就多了一个”admin:”</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291327824.png" alt="image-20210929132723779"></p><p>无关紧要，添加完密码文件后，在下面有效负载处理这边添加一个Base64编码规则</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291319193.png" alt="image-20210929131946082"></p><p>就是把密码文件中的字符先用Base64编码，然后再爆破</p><p>再往下拉</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291320654.png" alt="image-20210929132036581"></p><p>防止base64编码后的=号被URL编码</p><p>然后就可以右上角开始攻击了！</p><p>结束后点击长度排序一下，可以看到长度不同的有效载荷，就是正确的用户名和密码啦！</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291423106.png" alt="image-20210929142357974"></p><p>然后双击，就可以在下方的Response中看到flag</p><p>也可以直接复制这串base64放到数据包中的对应位置，然后放行数据包，就可以在网页上看到flag了！</p><p>也可以先解码一下，得到正确密码</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291323241.png" alt="image-20210929132353144"></p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291324570.png" alt="image-20210929132402515"></p><p>然后再重新返回页面输入正确的用户名和密码得到flag</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109291325922.png" alt="image-20210929132508810"></p><div class="note green icon simple"><i class="note-icon fas fa-thumbs-up"></i><p>总结：</p><ol><li>填写用户名密码，然后用Burp Suite抓包，看到用户名和密码都被执行Base64编码后才传到服务器</li><li>抓的数据包发送到Repeater，看到响应头有提示用户名为admin</li><li>写脚本或者用Notepad++等其它软件在每行密码前添加”admin:”</li><li>抓的数据包发送到Intruder，然后对被Base64编码的地方添加一个payload</li><li>把密码文件载入到载荷中，进行base64编码后进行爆破攻击，得到正确的用户名和密码，拿到flag</li></ol></div><hr><blockquote><p>PS：好像正确的用户名密码不是固定的，记得自己手动做一下！</p><p>没想到第一条正经博客居然写那么啰嗦…</p></blockquote>]]></content>
    
    
    <summary type="html">CTFHub技能树上的http基础认证题</summary>
    
    
    
    <category term="CTFHub" scheme="https://jason177.com/categories/CTFHub/"/>
    
    
    <category term="CTF-exercises" scheme="https://jason177.com/tags/CTF-exercises/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="https://jason177.com/2021/09/25/onepost/"/>
    <id>https://jason177.com/2021/09/25/onepost/</id>
    <published>2021-09-25T08:28:40.000Z</published>
    <updated>2021-09-25T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><h1 id="我的第一篇文章！"><a href="#我的第一篇文章！" class="headerlink" title="我的第一篇文章！"></a>我的第一篇文章！</h1><p>其实我也不知道要讲什么，就先这样吧！</p><p>开启我的Blog生涯！</p><p><img src="https://cdn.jsdelivr.net/gh/xssqg/image/202109251640402.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="life" scheme="https://jason177.com/categories/life/"/>
    
    
    <category term="生活" scheme="https://jason177.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
